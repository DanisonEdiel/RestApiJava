name: CI/CD for Spring Boot with Docker and EC2 Deployment

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar Java y Maven
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Build JAR with Maven
        run: mvn clean package -DskipTests

      # 3. Iniciar sesi√≥n en Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 4. Construir la imagen Docker
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/rest-api-java:latest .

      # 5. Subir la imagen a Docker Hub
      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/rest-api-java:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # 1. Configurar la clave SSH
      - name: Set up SSH Key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # 2. Desplegar en EC2
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            echo "Updating EC2 instance..."
            sudo yum update -y

            echo "Installing required tools: Git, Docker..."
            sudo yum install -y git docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ec2-user

            # Recargar permisos del grupo Docker
            newgrp docker <<INNER_EOF
              echo "Pulling the Docker image..."
              docker stop rest-api-java || true
              docker rm rest-api-java || true
              docker pull ${{ secrets.DOCKER_USERNAME }}/rest-api-java:latest

              echo "Running the Docker container..."
              docker run -d --name rest-api-java -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/rest-api-java:latest
            INNER_EOF
          EOF
